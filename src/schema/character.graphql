type Skill {
  id: ID!
  name: String!
  multiplier: Int
  activeSkillLevel: Int
  trainedSkillLevel: Int
  skillPointsInSkill: Int
}

type SkillGroup {
  id: ID!
  name: String!
  skills: [Skill!]!
  totalSp: Int
  trainedSp: Int
}

type Character {
  id: ID!
  corporation: Corporation!
  name: String!
  gender: String!
  scopes: [String!]
  birthday: DateTime!
  securityStatus: Float!
  skillGroups: [SkillGroup!]!
  skillGroup(id: ID!): SkillGroup
  totalSp: Int
}

extend type Query {
  character(id: ID!): Character
  characters: [Character!]!
}

extend type Mutation {
  addCharacter(code: String!): Character!
  updateCharacter(id: ID!, code: String!): Character!
  removeCharacter(id: ID!): ID!
}
